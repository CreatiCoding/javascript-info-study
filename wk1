
# 소개
자바스크립트 언어와 호스트 환경에 대해 소개합니다.
1. 자바스크립트란?         
2. 매뉴얼과 명세서         
3. 코드 에디터         
4. 개발자 콘솔   

---

# 1. 자바스크립트란 ? 
https://ko.javascript.info/intro
## 정의
- '웹페이지에 생동감을 불어넣기 위해’ 만들어진 프로그래밍 언어
- 자바스크립트로 작성한 프로그램을 스크립트(script) 라고 부름. 스크립트는 웹페이지의 HTML 안에 작성할 수 있는데, 웹페이지를 불러올 때 스크립트가 자동으로 실행됨.
- 스크립트는 특별한 준비나 컴파일 없이 보통의 문자 형태로 작성할 수 있고, 실행도 할 수 있음.

- 자바스크립트는 브라우저뿐만 아니라 서버에서도 실행가능. 이 외에도 자바스크립트 엔진(JavaScript engine)이라 불리는 특별한 프로그램이 들어 있는 모든 디바이스에서도 동작함.

---

- 브라우저엔 '자바스크립트 가상 머신’이라 불리는 엔진이 내장되어 있음.

- 각 엔진마다 특유의 코드네임이 있다.
  > V8 – Chrome과 Opera에서 쓰임.
SpiderMonkey – Firefox에서 쓰임.
IE는 버전에 따라 'Trident’나 'Chakra’라 불리는 엔진을 사용. 'ChakraCore’는 Microsoft Edge에 사용되며, 'SquirrelFish’는 Safari에 사용.

   **🤔"X라는 기능은 V8에서만 지원합니다."??** 
    🤓 => Chrome과 Opera에서만 X 기능을 지원!

---

## ⭕브라우저에서 할 수 있는 일
**->웹페이지 조작, 클라이언트와 서버의 상호작용에 관한 모든 일을 할 수 있다!**

- 페이지에 새로운 HTML을 추가하거나 기존 HTML, 혹은 스타일 수정하기
- 마우스 클릭이나 포인터의 움직임, 키보드 키 눌림 등과 같은 사용자 행동에 반응하기
- 네트워크를 통해 원격 서버에 요청을 보내거나, 파일 다운로드, 업로드
- 쿠키를 가져오거나 설정하기. 사용자에게 질문을 건네거나 메시지 보여주기
- 클라이언트 측에 데이터 저장하기(로컬 스토리지)

---

## ❌브라우저에서 할 수 없는 일
**->보안에 문제가 되는 것들은 제약된다!**

- 운영체제가 지원하는 기능을 브라우저가 *직접*  쓰지 못하게 막혀있음. 
  >  특정 상황에서만 파일 또는 디바이스에 접근을 허용. 

- 동일 출처 정책(Same Origin Policy) 에 위반될 때 
  > 이 정책을 피하려면 두 페이지는 데이터 교환에 동의해야 하고, 동의와 관련된 특수한 자바스크립트 코드를 포함하고 있어야 함.


⭕ 페이지를 생성한 서버와 정보를 주고받기 가능
❌ 타 사이트나 도메인에서 데이터를 받아오는 건 불가능. (가능하다 할지라도 원격 서버에서 명확한 승인이 필요(HTTP 헤더 등을 이용). 

---

## 👍자바스크립트만의 강점
- HTML/CSS와 완전히 통합할 수 있음
- 간단한 일은 간단하게 처리할 수 있게 해줌
- 모든 주요 브라우저에서 지원하고, 기본 언어로 사용됨

**=> 브라우저 환경에서 가장 널리 사용되는 언어**

## 자바스크립트 ‘너머의’ 언어들
- CoffeeScript, TypeScript, Flow, Dart

---

# 2. 매뉴얼과 명세서
https://ko.javascript.info/manuals-specifications

## 명세서
[ECMA-262 명세서(specification)] (https://262.ecma-international.org/12.0/)
가장 신뢰할만한 자료이긴 하지만 일상적인 참고자료로는 적합하지 않음.
## 매뉴얼
[MDN JavaScript Reference] (https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference)
특정 함수나 메서드에 대한 깊이 있는 정보를 얻고 싶다면 이 사이트가 제격

---

## 호환성 표
특정 브라우저나 엔진이 내가 사용하려는 기능을 지원하는지 확인할 때 참고

- http://caniuse.com 
- http://caniuse.com/#feat=cryptography
암호화 관련 기능인 cryptography를 확인할 때
- https://kangax.github.io/compat-table 

--- 
        
# 3. 코드 에디터
https://ko.javascript.info/code-editors
## 통합 개발 환경 (Integrated Development Environment, IDE)
- Visual Studio Code (크로스 플랫폼, 무료)
- WebStorm (크로스 플랫폼, 유료)
## 경량 에디터 (lightweight editor)
- Atom (크로스 플랫폼, 무료)
- Visual Studio Code (크로스 플랫폼, 무료)
- Sublime Text (크로스 플랫폼, 셰어웨어)
- Notepad++ (Windows, 무료)

**VS Code가 가장 많이 사용된다.**

---

# 4. 개발자 콘솔
https://ko.javascript.info/devtools
- 개발 도중 에러를 확인하거나, 테스트 하는 용도로쓰임
## Chrome
- Window : `F12` / Mac : `Cmd+Opt+J`
- `>` 옆에  자바스크립트 명령어(command)를 입력가능. 이를 '커맨드 라인(command line)'이라 부릅니다. 명령어(command)를 입력한 후 `Enter`를 누르면 해당 명령어가 실행됨. (명령어를 여러 줄에 걸쳐 작성하고 싶다면 `Shift+Enter`)
## Safari
- `환경설정(Preferences)` -  `고급(Advanced)` - `개발자용 메뉴 보기` 체크해 개발자 도구를 활성화 후  `Cmd+Opt+C`
     
